name: intellicollab

services:
  redis:
    image: redis/redis-stack:6.2.6-v19
    container_name: redis
    environment:
      REDIS_ARGS: "--requirepass dontknow"
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"

  prom-server:
    image: prom/prometheus
    container_name: prom-server
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3001:3001"

  kafka:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092" # client connections
      - "9093:9093" # controller listener
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.29.60:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_CLUSTER_ID: 1Eodtvr-QgqokHGcdfv-5g
    volumes:
      - kafka-data:/var/lib/kafka/data

volumes:
  redis_data:
  kafka-data:
